/*
 * Copyright (c) 2023 - Adjacent Link LLC, Bridgewater, New Jersey
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * * Redistributions of source code must retain the above copyright
 *   notice, this list of conditions and the following disclaimer.
 * * Redistributions in binary form must reproduce the above copyright
 *   notice, this list of conditions and the following disclaimer in
 *   the documentation and/or other materials provided with the
 *   distribution.
 * * Neither the name of Adjacent Link LLC nor the names of its
 *   contributors may be used to endorse or promote products derived
 *   from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
 * FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
 * COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
 * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
 * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

syntax = "proto2";

package EMANEJammerSimple;

option optimize_for = SPEED;

message Request
{
  enum Type
  {
    COMMAND_ON = 1;
    COMMAND_OFF = 2;
  }

  message On
  {
    message Frequency
    {
      required uint64 frequency_hz = 1;
      required double power_dBm = 2;
    }
    
    message Antenna
    {
      enum Type
      {
        ANTENNA_IDEAL_OMNI = 1;
        ANTENNA_PROFILE_DEFINED = 2;
      }
      
      required Type type = 1;
      optional double fixed_gain_dBi = 2;
    }
    
    repeated Frequency frequencies = 1;
    required Antenna antenna = 2;
    required uint32 spectral_mask_index = 3;
    required uint64 period_microseconds = 4;
    required uint32 duty_cycle_percent = 5;
    required uint64 bandwidth_hz = 6;
    required uint32 nem_id = 7;
  }

  required Type type = 1;
  optional On on = 2;
}

message Response
{
  required bool success = 1;
  optional string description = 2;
}
